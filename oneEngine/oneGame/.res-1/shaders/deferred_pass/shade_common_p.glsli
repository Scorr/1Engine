#ifndef DEFERRED_PASS_SHADE_COMMON_P_GLSLI_
#define DEFERRED_PASS_SHADE_COMMON_P_GLSLI_

#include "../deferred_surface.glsli"
#include "../cbuffers.glsli"

// Common samplers
layout(binding = 0, location = 20) uniform sampler2D textureSampler0;	// Diffuse
layout(binding = 1, location = 21) uniform usampler2D textureSampler1;	// Normals
layout(binding = 2, location = 22) uniform sampler2D textureSampler2;	// Lighting Properties
layout(binding = 3, location = 23) uniform sampler2D textureSampler3;	// Glow (for now)
layout(binding = 4, location = 24) uniform sampler2D textureSampler4;	// Depth

void SampleGBuffer ( out rrGBufferValues gbuffer, in vec2 uv0 )
{
	ivec2 pixelLookup = ivec2(uv0.x * sys_ScreenSize.x, uv0.y * sys_ScreenSize.y);
	
	gbuffer.buffer0 = texelFetch( textureSampler0, pixelLookup, 0 );
	gbuffer.buffer1 = texelFetch( textureSampler1, pixelLookup, 0).xy;
	gbuffer.buffer2 = texture( textureSampler2, uv0 );
	gbuffer.buffer3 = texture( textureSampler3, uv0 );
	gbuffer.depth = texture( textureSampler4, uv0 ).x;
}

#endif//DEFERRED_PASS_SHADE_COMMON_P_GLSLI_