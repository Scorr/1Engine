#ifndef COMMON_GLSLI_
#define COMMON_GLSLI_

// Binding constants. Ensure matches with renderer\types\shaders\cbuffers.h
#define CBUFFER_PER_OBJECT_MATRICES 0
#define CBUFFER_PER_OBJECT_EXTENDED 1
#define CBUFFER_PER_CAMERA_INFORMATION 2
#define CBUFFER_PER_FRAME_INFORMATION 3
#define CBUFFER_PER_PASS_INFORMATION 4
#define CBUFFER_USER0 7
#define CBUFFER_USER1 8
#define CBUFFER_USER2 9
#define CBUFFER_USER3 10

// Binding constants. Ensure matches with renderer\types\shaders\sbuffers.h
#define SBUFFER_SKINNING_MAJOR 11
#define SBUFFER_SKINNING_MINOR 12
#define SBUFFER_USER0 13
#define SBUFFER_USER1 14
#define SBUFFER_USER2 15
#define SBUFFER_USER3 16


vec4 TransformToProjection ( mat4 viewProjection, vec3 localPosition )
{
	vec4 v_screenPos = viewProjection * vec4(localPosition, 1.0);
	return v_screenPos;
}

#	define M_E        2.71828182845904523536   // e
#	define M_LOG2E    1.44269504088896340736   // log2(e)
#	define M_LOG10E   0.434294481903251827651  // log10(e)
#	define M_LN2      0.693147180559945309417  // ln(2)
#	define M_LN10     2.30258509299404568402   // ln(10)
#	define M_PI       3.14159265358979323846   // pi
#	define M_PI_2     1.57079632679489661923   // pi/2
#	define M_PI_4     0.785398163397448309616  // pi/4
#	define M_1_PI     0.318309886183790671538  // 1/pi
#	define M_2_PI     0.636619772367581343076  // 2/pi
#	define M_2_SQRTPI 1.12837916709551257390   // 2/sqrt(pi)
#	define M_SQRT2    1.41421356237309504880   // sqrt(2)
#	define M_SQRT1_2  0.707106781186547524401  // 1/sqrt(2)

#endif//COMMON_GLSLI_