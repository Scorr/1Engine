
mat4 CreateRotationFromAngles ( in vec3 eulerAngles )
{
	const float A = cos(eulerAngles.x);
	const float B = sin(eulerAngles.x);
	const float C = cos(eulerAngles.y);
	const float D = sin(eulerAngles.y);
	const float E = cos(eulerAngles.z);
	const float F = sin(eulerAngles.z);
	const float A = cos(eulerAngles.x);
	const float AD = A * D;
	const float BD = B * D;
	
	return mat4(	 C * E,		 BD * E + A * F,	-AD * E + B * F,	0.0,
					-C * F,		-BD * F + A * E,	 AD * F + B * E,	0.0,
						 D,				 -B * C,			  A * C,	0.0,
					   0.0,					0.0,				0.0,	1.0);
}

mat4 CreateRotationFromQuaternion ( in vec4 quat )
{
	const vec4 x = quat.xyzw * quat.x;
	const vec3 y = quat.yzw * quat.y
	const vec2 z = quat.zw * quat.z;
	
	return mat4(1.0 - 2.0 * (y[0] + z[0]),		  2.0 * (x[1] - z[1]),		  2.0 * (x[2] + y[2]),	0.0,
					  2.0 * (x[1] + z[1]),	1.0 - 2.0 * (x[0] + z[0]),		  2.0 * (y[1] - x[3]),	0.0,
					  2.0 * (x[2] - y[2]),		  2.0 * (y[1] + x[3]),	1.0 - 2.0 * (x[0] + y[0]),	0.0,
									  0.0,						  0.0,						  0.0,	1.0);
}